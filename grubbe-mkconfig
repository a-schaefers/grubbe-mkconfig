#!/bin/sh

# usage: ./grubbe-mkconfig > /boot/grub/grub.cfg
# Every time on beadm create/rename/destroy
# or hook it into your beadm script yourself.

#################
# preamble      #
#################

# Use at your own peril

# THIS IS A WORK-AROUND
# The real problem that needs to be fixed is that grub itself is not 'smart'
# enough in that it does not use the bootfs property when loading a kernel
# and initramfs...

# The goal of this script is to auto-generate the most minimally possible, 
# functional grub.cfg, populated with zfs boot environment menuentry stanzas only.
# The script purposefully disregards the video modes, font etc-- menu entries only.

#################
# pre-setup     #
#################

# 0.0) GPT with legacy bios is assumed here. Otherwise, slight modification will be necessary.

# 0.1)
# in order to play nicely with boot environments, grub needs an unchanging location
# This is because grub stage1 is hardwired to find /boot/grub in the same dataset every time.
# I recommend /boot/grub is located on its own, separate dataset outside of ROOT.

# 0.2)
# This script assumes dracut was used for initramfs generation
# by using the root=zfs:pool/ROOT/BeName convention on linux cmdline
# if using genkernel or other, you will need to modify the line in the script:
# root=zfs:${POOL_NAME}/ROOT/${BENAME}
# to use your required formatting for your system.

# 0.3)
# This script assumes a static (non-versioned) kernel naming convention.
# We need unchanging kernel and initramfs names in order to make this work.

#################
# set variables #
#################

# set name of pool containing the ROOT dataset
POOL_NAME="zroot"

# set kernel name (e.g. for /boot/vmlinuz)
KERNEL="vmlinuz"

# set initramfs name (e.g. for /boot/initramfs.img)
INITRAMFS="initramfs.img"

# set kernel command line
CMDLINE="elevator=noop intel_iommu=on iommu=pt ipv6.disable=1 zfs.force=1"

# set root=''
# tip: use grub-probe /boot/grub --target=bios_hints to see what should go here:
BIOS_HINTS="hd0,gpt1"

##############################################################################
##############################################################################

# get list of boot environments, one be per line
BELIST="$(/sbin/zfs list -H -d 2 -o type,name,canmount,mountpoint | \
    awk 'BEGIN  { FS="\t"; split("",mounts); }; ( $1 ~ /filesystem/ ) && \
    ( $2 ~ /ROOT\// ) && \
    ( $4 == "/" || $4 == "none") \
    { mounts[$2]=$0; }; END { for (m in mounts) { gsub(/.*\//, "", m); print m; }; };')"

# iterate over each line of the $BELIST, outputting our stanzas
IFS=$'\n'
for BENAME in $BELIST
do

cat <<EOF
menuentry '${BENAME}' {
	insmod gzio
	insmod part_gpt
	insmod zfs
	set root='${BIOS_HINTS}'
	echo	'Loading Linux ...'
	linux	/ROOT/${BENAME}@/boot/${KERNEL} root=zfs:${POOL_NAME}/ROOT/${BENAME} ${CMDLINE}
	echo	'Loading initial ramdisk ...'
	initrd	/ROOT/${BENAME}@/boot/${INITRAMFS}
    }
EOF

done
